# You can set these variables from the command line.ROOT          = .DISTDIR       = $(ROOT)/distTHIS_FILE    := $(lastword $(MAKEFILE_LIST))TEST_DIR      = $(ROOT)TEST_CMD      = nosetests --with-coverage --cover-erase --cover-htmlPIP_CMD       = pip3DEPENDS       = $(ROOT)/requirements.txtDOCDIR        = $(ROOT)/docsCACHE_PATTERN = .*\(\.pyc\|__pycache__\).PHONY: helphelp: @echo "Please use \`make <target>' where <target> is one of" @echo "  test       to run the full test suite" @echo "  depends    to install all dependencies" @echo "  docs       to generate docs for finance metrics" @echo "  clean      to remove all the python cached files and docs/_build".PHONY: testtest: $(shell cd $(TEST_DIR); $(TEST_CMD)).PHONY: dependsdepends: $(PIP_CMD) install -r $(DEPENDS).PHONY: docsdocs: @$(MAKE) -C $(DOCDIR) full_docs.PHONY: cleanclean: @echo "removing cached artifact" find . -regex "$(CACHE_PATTERN)" | xargs rm -rf {} @echo @echo "cleaning generated docs" @$(MAKE) -C $(DOCDIR) clean.PHONY: stylecheckstylecheck: @echo "running style check on flake8" flake8 ..PHONY: packagepackage: @echo "Packaging project runnable" rm -rf $(DISTDIR) mkdir -p $(DISTDIR) zip $(DISTDIR)/financemetrics-dev.zip -r . \  -x .git\*            \  -x .idea\*           \  -x logs\*            \  -x dist\*            \  -x tests\*           \  -x cover\*           \  -x \*.pyc            \  -x \*.zip            \  -x \*.tar.\*         \  -x \*__pycache__\*   \  -x .coverage\*       \  -x .projectile       \  -x .flake8 @echo "Packaging coverage report" zip $(DISTDIR)/coverage-report.zip -r ./cover @echo "Packaging finished"
